name: Deploy Next.js App

on:
  push:
    branches:
      - main  # Set to your default branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2


      - name: nestJS build cache
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-


      - name: Install Dependencies
        run: npm install --force


      - name: Copy Files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          source: "."
          target: "/home/acreativdesign-keycaps/htdocs/midgard.association-hrafn-hugsadi.fr"




# pm2 start npm --name "midgard" -- start
      - name: Restart Application
        uses: appleboy/ssh-action@master
        with:
          env: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /home/acreativdesign-keycaps/htdocs/midgard.association-hrafn-hugsadi.fr/        
            npm install         
            echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" > .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            npx prisma migrate deploy
            npx prisma generate            
            npm run build
            pm2 restart midgard
            
